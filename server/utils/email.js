import Mailjet from 'node-mailjet';
import dotenv from 'dotenv';

dotenv.config();

const mailjet = Mailjet.apiConnect(
  process.env.MAILJET_API_KEY,
  process.env.MAILJET_SECRET_KEY
);

export const sendNotificationEmail = async ({ to, formName, submissionData, files, submissionId }) => {
  try {
    if (!process.env.MAILJET_API_KEY || !process.env.MAILJET_SECRET_KEY) {
      console.log('Mailjet not configured, skipping email');
      return;
    }

    // Format submission data for email
    let formattedData = '';
    Object.entries(submissionData).forEach(([key, value]) => {
      if (key !== 'files') {
        formattedData += `<strong>${key}:</strong> ${value}<br>`;
      }
    });

    // Format files list
    let filesInfo = '';
    if (files && files.length > 0) {
      filesInfo = '<h3>Attachments:</h3><ul>';
      files.forEach(file => {
        const fieldLabel = file.fieldName || 'Unknown Field';
        filesInfo += `<li><strong>${fieldLabel}:</strong> ${file.name} (${(file.size / 1024).toFixed(1)} KB)</li>`;
      });
      filesInfo += '</ul>';
    }

    const htmlContent = `
      <h2>New Form Submission: ${formName}</h2>
      <p><strong>Submission ID:</strong> ${submissionId}</p>
      <p><strong>Timestamp:</strong> ${new Date().toLocaleString('en-US')}</p>
      
      <h3>Submitted Data:</h3>
      ${formattedData}
      
      ${filesInfo}
      
      <hr>
      <p><small>This email was automatically generated by Euroform.</small></p>
    `;

    const request = await mailjet.post('send', { version: 'v3.1' }).request({
      Messages: [
        {
          From: {
            Email: process.env.MAILJET_FROM_EMAIL,
            Name: process.env.MAILJET_FROM_NAME || 'Euroform'
          },
          To: [
            {
              Email: to
            }
          ],
          Subject: `New Submission: ${formName}`,
          HTMLPart: htmlContent,
          TextPart: `New form submission for "${formName}"\n\nSubmission ID: ${submissionId}\n\n${Object.entries(submissionData).map(([key, value]) => `${key}: ${value}`).join('\n')}`
        }
      ]
    });

    console.log('Email sent successfully:', request.body);
    return request.body;
  } catch (error) {
    console.error('Error sending email:', error);
    throw error;
  }
};

export default { sendNotificationEmail };
